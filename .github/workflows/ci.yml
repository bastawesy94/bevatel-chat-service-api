name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - production
  pull_request:
    branches:
      - develop
      - production

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

      - name: Lint Code
        run: npm run lint

  build-new-production-version:
    runs-on: ubuntu-latest
    needs: CI
    if: github.ref == 'refs/heads/production'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      # Docker login step
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image using the current version (e.g., 0.0.17)
      - name: Build Docker Image
        run: |
          VERSION=$(jq -r '.version' package.json)
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bevatel-chat-service-api:$VERSION .

      # Push the Docker image with the current version (e.g., 0.0.17)
      - name: Push Docker Image
        run: |
          VERSION=$(jq -r '.version' package.json)
          docker push ${{ secrets.DOCKER_USERNAME }}/bevatel-chat-service-api:$VERSION

  deploy-to-koyeb:
    runs-on: ubuntu-latest
    needs: build-new-production-version
    concurrency:
      group: shrill-devora
      cancel-in-progress: true
    steps:
      # Step to checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: "${{ secrets.KOYEB_API_KEY }}"

      - name: Build Docker Image and Deploy
        run: |
          VERSION=$(jq -r '.version' package.json)
          koyeb services update bevatel-chat-service-api \
            --docker ${{ secrets.DOCKER_USERNAME }}/bevatel-chat-service-api:$VERSION
        shell: /usr/bin/bash -e {0}

      # Increment version AFTER deploying to Koyeb
      - name: Increment Version
        id: increment_version
        run: |
          # Set up Git user identity
          git config --local user.email "mohamedel.bastawesy2020@gmail.com"
          git config --local user.name "bastawesy94"

          # Stage any changes to package-lock.json
          git add package-lock.json

          # Commit any changes if necessary to avoid conflicts
          git commit -m "Committing changes before version increment" || true
          
          # Increment the version in package.json
          npm version patch -m "Increment version to %s"
          
          # Output the new version
          echo "New version: $(jq -r '.version' package.json)" > version.txt

      # Commit the incremented version (e.g., 0.0.18) for the next cycle
      - name: Commit and Push Version Change
        run: |
          # Set up Git user identity
          git config --local user.email "mohamedel.bastawesy2020@gmail.com"
          git config --local user.name "bastawesy94"

          # Stage changes to package.json and version.txt
          git add package.json version.txt

          # Commit changes
          git commit -m "Update version" || true

          # Push changes to the production branch using GITHUB_TOKEN for authentication
          git push https://x-access-token:${{ secrets.TOKEN_GITHUB }}@github.com/bastawesy94/bevatel-chat-service-api.git production || true
