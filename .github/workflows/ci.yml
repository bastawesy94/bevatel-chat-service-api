name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - production
  pull_request:
    branches:
      - develop
      - production

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

      - name: Lint Code
        run: npm run lint

  build-new-production-vesion:
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/production'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      # Step 1: Get the current version from package.json
      - name: Get Current Version
        id: get_version
        run: echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      # Step 2: Build and push the Docker image with the current version
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bevatel-chat-service-api:${{ env.VERSION }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/bevatel-chat-service-api:${{ env.VERSION }}

      # Step 3: Deploy the current version to Koyeb
      - name: Deploy to Koyeb
        run: |
          DEPLOY_PAYLOAD="{\"image\": \"${{ secrets.DOCKER_USERNAME }}/bevatel-chat-service-api:${{ env.VERSION }}\"}"
          echo "Deploy Payload: $DEPLOY_PAYLOAD"
          curl -X POST https://app.koyeb.com/v1/services/1ecc505d-ac58-4c8f-a83b-d4e62e44c826/redeploy \
          -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d "$DEPLOY_PAYLOAD"

        env:
          KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      # Step 4: Increment the version after successful deployment
      - name: Increment Version
        run: |
          git config --local user.email "mohamedel.bastawesy2020@gmail.com"
          git config --local user.name "bastawesy94"
          npm version patch -m "Increment version to %s"
          git add package.json package-lock.json
          git commit -m "Increment version to $(jq -r '.version' package.json)"
          git push https://x-access-token:${{ secrets.TOKEN_GITHUB }}@github.com/bastawesy94/bevatel-chat-service-api.git production
